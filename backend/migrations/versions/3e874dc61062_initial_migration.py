"""
Initial migration.

Revision ID: 3e874dc61062
Revises:
Create Date: 2025-02-20 05:07:34.876327
"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '3e874dc61062'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenant',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('customer_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenant_customer_id'), 'tenant', ['customer_id'], unique=True)
    op.create_index(op.f('ix_tenant_id'), 'tenant', ['id'], unique=False)
    op.create_index(op.f('ix_tenant_name'), 'tenant', ['name'], unique=True)
    op.create_table('team',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_id'), 'team', ['id'], unique=False)
    op.create_index(op.f('ix_team_name'), 'team', ['name'], unique=False)
    op.create_index(op.f('ix_team_tenant_id'), 'team', ['tenant_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=True),
    sa.Column('multi_tenant_access', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_tenant_id'), 'user', ['tenant_id'], unique=False)
    op.create_table('apikey',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_apikey_id'), 'apikey', ['id'], unique=False)
    op.create_index(op.f('ix_apikey_key'), 'apikey', ['key'], unique=True)
    op.create_index(op.f('ix_apikey_tenant_id'), 'apikey', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_apikey_user_id'), 'apikey', ['user_id'], unique=False)
    op.create_table('auditlog',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'ACCESS', 'EXECUTE', name='auditaction'), nullable=False),
    sa.Column('resource', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('details', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auditlog_id'), 'auditlog', ['id'], unique=False)
    op.create_index(op.f('ix_auditlog_resource'), 'auditlog', ['resource'], unique=False)
    op.create_index(op.f('ix_auditlog_tenant_id'), 'auditlog', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_auditlog_user_id'), 'auditlog', ['user_id'], unique=False)
    op.create_table('ratelimit',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('endpoint', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('request_count', sa.Integer(), nullable=False),
    sa.Column('last_reset', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ratelimit_endpoint'), 'ratelimit', ['endpoint'], unique=False)
    op.create_index(op.f('ix_ratelimit_id'), 'ratelimit', ['id'], unique=False)
    op.create_index(op.f('ix_ratelimit_tenant_id'), 'ratelimit', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_ratelimit_user_id'), 'ratelimit', ['user_id'], unique=False)
    op.create_table('teammember',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teammember_id'), 'teammember', ['id'], unique=False)
    op.create_index(op.f('ix_teammember_team_id'), 'teammember', ['team_id'], unique=False)
    op.create_index(op.f('ix_teammember_user_id'), 'teammember', ['user_id'], unique=False)
    op.create_table('userrole',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'DEVELOPER', 'USER', 'DATA_ENGINEER', name='role'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userrole_id'), 'userrole', ['id'], unique=False)
    op.create_index(op.f('ix_userrole_user_id'), 'userrole', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_userrole_user_id'), table_name='userrole')
    op.drop_index(op.f('ix_userrole_id'), table_name='userrole')
    op.drop_table('userrole')
    op.drop_index(op.f('ix_teammember_user_id'), table_name='teammember')
    op.drop_index(op.f('ix_teammember_team_id'), table_name='teammember')
    op.drop_index(op.f('ix_teammember_id'), table_name='teammember')
    op.drop_table('teammember')
    op.drop_index(op.f('ix_ratelimit_user_id'), table_name='ratelimit')
    op.drop_index(op.f('ix_ratelimit_tenant_id'), table_name='ratelimit')
    op.drop_index(op.f('ix_ratelimit_id'), table_name='ratelimit')
    op.drop_index(op.f('ix_ratelimit_endpoint'), table_name='ratelimit')
    op.drop_table('ratelimit')
    op.drop_index(op.f('ix_auditlog_user_id'), table_name='auditlog')
    op.drop_index(op.f('ix_auditlog_tenant_id'), table_name='auditlog')
    op.drop_index(op.f('ix_auditlog_resource'), table_name='auditlog')
    op.drop_index(op.f('ix_auditlog_id'), table_name='auditlog')
    op.drop_table('auditlog')
    op.drop_index(op.f('ix_apikey_user_id'), table_name='apikey')
    op.drop_index(op.f('ix_apikey_tenant_id'), table_name='apikey')
    op.drop_index(op.f('ix_apikey_key'), table_name='apikey')
    op.drop_index(op.f('ix_apikey_id'), table_name='apikey')
    op.drop_table('apikey')
    op.drop_index(op.f('ix_user_tenant_id'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_team_tenant_id'), table_name='team')
    op.drop_index(op.f('ix_team_name'), table_name='team')
    op.drop_index(op.f('ix_team_id'), table_name='team')
    op.drop_table('team')
    op.drop_index(op.f('ix_tenant_name'), table_name='tenant')
    op.drop_index(op.f('ix_tenant_id'), table_name='tenant')
    op.drop_index(op.f('ix_tenant_customer_id'), table_name='tenant')
    op.drop_table('tenant')
    # ### end Alembic commands ###
